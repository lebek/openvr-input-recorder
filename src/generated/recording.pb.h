// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recording.proto

#ifndef PROTOBUF_recording_2eproto__INCLUDED
#define PROTOBUF_recording_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include "ovr_device.pb.h"
// @@protoc_insertion_point(includes)
class OVRDevice;
class OVRDeviceDefaultTypeInternal;
extern OVRDeviceDefaultTypeInternal _OVRDevice_default_instance_;
class OVRDeviceProperty;
class OVRDevicePropertyDefaultTypeInternal;
extern OVRDevicePropertyDefaultTypeInternal _OVRDeviceProperty_default_instance_;
class OVRSample;
class OVRSampleDefaultTypeInternal;
extern OVRSampleDefaultTypeInternal _OVRSample_default_instance_;
class OVRTimeline;
class OVRTimelineDefaultTypeInternal;
extern OVRTimelineDefaultTypeInternal _OVRTimeline_default_instance_;
class Recording;
class RecordingDefaultTypeInternal;
extern RecordingDefaultTypeInternal _Recording_default_instance_;
namespace google {
namespace protobuf {
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace protobuf_recording_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_recording_2eproto

// ===================================================================

class Recording : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Recording) */ {
 public:
  Recording();
  virtual ~Recording();

  Recording(const Recording& from);

  inline Recording& operator=(const Recording& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Recording& default_instance();

  static inline const Recording* internal_default_instance() {
    return reinterpret_cast<const Recording*>(
               &_Recording_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Recording* other);

  // implements Message ----------------------------------------------

  inline Recording* New() const PROTOBUF_FINAL { return New(NULL); }

  Recording* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Recording& from);
  void MergeFrom(const Recording& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Recording* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OVRDevice devices = 3;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 3;
  const ::OVRDevice& devices(int index) const;
  ::OVRDevice* mutable_devices(int index);
  ::OVRDevice* add_devices();
  ::google::protobuf::RepeatedPtrField< ::OVRDevice >*
      mutable_devices();
  const ::google::protobuf::RepeatedPtrField< ::OVRDevice >&
      devices() const;

  // repeated .OVRTimeline timeline = 4;
  int timeline_size() const;
  void clear_timeline();
  static const int kTimelineFieldNumber = 4;
  const ::OVRTimeline& timeline(int index) const;
  ::OVRTimeline* mutable_timeline(int index);
  ::OVRTimeline* add_timeline();
  ::google::protobuf::RepeatedPtrField< ::OVRTimeline >*
      mutable_timeline();
  const ::google::protobuf::RepeatedPtrField< ::OVRTimeline >&
      timeline() const;

  // .google.protobuf.Timestamp start = 1;
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 1;
  const ::google::protobuf::Timestamp& start() const;
  ::google::protobuf::Timestamp* mutable_start();
  ::google::protobuf::Timestamp* release_start();
  void set_allocated_start(::google::protobuf::Timestamp* start);

  // .google.protobuf.Timestamp end = 2;
  bool has_end() const;
  void clear_end();
  static const int kEndFieldNumber = 2;
  const ::google::protobuf::Timestamp& end() const;
  ::google::protobuf::Timestamp* mutable_end();
  ::google::protobuf::Timestamp* release_end();
  void set_allocated_end(::google::protobuf::Timestamp* end);

  // @@protoc_insertion_point(class_scope:Recording)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::OVRDevice > devices_;
  ::google::protobuf::RepeatedPtrField< ::OVRTimeline > timeline_;
  ::google::protobuf::Timestamp* start_;
  ::google::protobuf::Timestamp* end_;
  mutable int _cached_size_;
  friend struct protobuf_recording_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Recording

// .google.protobuf.Timestamp start = 1;
inline bool Recording::has_start() const {
  return this != internal_default_instance() && start_ != NULL;
}
inline void Recording::clear_start() {
  if (GetArenaNoVirtual() == NULL && start_ != NULL) delete start_;
  start_ = NULL;
}
inline const ::google::protobuf::Timestamp& Recording::start() const {
  // @@protoc_insertion_point(field_get:Recording.start)
  return start_ != NULL ? *start_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* Recording::mutable_start() {
  
  if (start_ == NULL) {
    start_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:Recording.start)
  return start_;
}
inline ::google::protobuf::Timestamp* Recording::release_start() {
  // @@protoc_insertion_point(field_release:Recording.start)
  
  ::google::protobuf::Timestamp* temp = start_;
  start_ = NULL;
  return temp;
}
inline void Recording::set_allocated_start(::google::protobuf::Timestamp* start) {
  delete start_;
  if (start != NULL && start->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_start = new ::google::protobuf::Timestamp;
    new_start->CopyFrom(*start);
    start = new_start;
  }
  start_ = start;
  if (start) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Recording.start)
}

// .google.protobuf.Timestamp end = 2;
inline bool Recording::has_end() const {
  return this != internal_default_instance() && end_ != NULL;
}
inline void Recording::clear_end() {
  if (GetArenaNoVirtual() == NULL && end_ != NULL) delete end_;
  end_ = NULL;
}
inline const ::google::protobuf::Timestamp& Recording::end() const {
  // @@protoc_insertion_point(field_get:Recording.end)
  return end_ != NULL ? *end_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* Recording::mutable_end() {
  
  if (end_ == NULL) {
    end_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:Recording.end)
  return end_;
}
inline ::google::protobuf::Timestamp* Recording::release_end() {
  // @@protoc_insertion_point(field_release:Recording.end)
  
  ::google::protobuf::Timestamp* temp = end_;
  end_ = NULL;
  return temp;
}
inline void Recording::set_allocated_end(::google::protobuf::Timestamp* end) {
  delete end_;
  if (end != NULL && end->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_end = new ::google::protobuf::Timestamp;
    new_end->CopyFrom(*end);
    end = new_end;
  }
  end_ = end;
  if (end) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Recording.end)
}

// repeated .OVRDevice devices = 3;
inline int Recording::devices_size() const {
  return devices_.size();
}
inline void Recording::clear_devices() {
  devices_.Clear();
}
inline const ::OVRDevice& Recording::devices(int index) const {
  // @@protoc_insertion_point(field_get:Recording.devices)
  return devices_.Get(index);
}
inline ::OVRDevice* Recording::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:Recording.devices)
  return devices_.Mutable(index);
}
inline ::OVRDevice* Recording::add_devices() {
  // @@protoc_insertion_point(field_add:Recording.devices)
  return devices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OVRDevice >*
Recording::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:Recording.devices)
  return &devices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OVRDevice >&
Recording::devices() const {
  // @@protoc_insertion_point(field_list:Recording.devices)
  return devices_;
}

// repeated .OVRTimeline timeline = 4;
inline int Recording::timeline_size() const {
  return timeline_.size();
}
inline void Recording::clear_timeline() {
  timeline_.Clear();
}
inline const ::OVRTimeline& Recording::timeline(int index) const {
  // @@protoc_insertion_point(field_get:Recording.timeline)
  return timeline_.Get(index);
}
inline ::OVRTimeline* Recording::mutable_timeline(int index) {
  // @@protoc_insertion_point(field_mutable:Recording.timeline)
  return timeline_.Mutable(index);
}
inline ::OVRTimeline* Recording::add_timeline() {
  // @@protoc_insertion_point(field_add:Recording.timeline)
  return timeline_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OVRTimeline >*
Recording::mutable_timeline() {
  // @@protoc_insertion_point(field_mutable_list:Recording.timeline)
  return &timeline_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OVRTimeline >&
Recording::timeline() const {
  // @@protoc_insertion_point(field_list:Recording.timeline)
  return timeline_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_recording_2eproto__INCLUDED
