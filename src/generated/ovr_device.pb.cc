// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ovr_device.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ovr_device.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class OVRDevicePropertyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OVRDeviceProperty> {
} _OVRDeviceProperty_default_instance_;
class OVRDeviceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OVRDevice> {
} _OVRDevice_default_instance_;
class OVRSampleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OVRSample> {
} _OVRSample_default_instance_;
class OVRTimelineDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OVRTimeline> {
} _OVRTimeline_default_instance_;

namespace protobuf_ovr_5fdevice_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDeviceProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDeviceProperty, identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDeviceProperty, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDeviceProperty, int32_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDeviceProperty, uint64_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDeviceProperty, bool_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDeviceProperty, float_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDeviceProperty, string_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDeviceProperty, matrix34_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDevice, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDevice, device_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDevice, controller_role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRDevice, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRSample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRSample, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRSample, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRSample, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRSample, axis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRSample, button_pressed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRSample, button_touched_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRTimeline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRTimeline, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVRTimeline, samples_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(OVRDeviceProperty)},
  { 13, -1, sizeof(OVRDevice)},
  { 22, -1, sizeof(OVRSample)},
  { 33, -1, sizeof(OVRTimeline)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_OVRDeviceProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OVRDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OVRSample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OVRTimeline_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ovr_device.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _OVRDeviceProperty_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _OVRDevice_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _OVRSample_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _OVRTimeline_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _OVRDeviceProperty_default_instance_.DefaultConstruct();
  _OVRDevice_default_instance_.DefaultConstruct();
  _OVRSample_default_instance_.DefaultConstruct();
  _OVRTimeline_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020ovr_device.proto\"\236\002\n\021OVRDeviceProperty"
      "\022\022\n\nidentifier\030\010 \001(\005\022%\n\004type\030\001 \001(\0162\027.OVR"
      "DeviceProperty.Type\022\023\n\013int32_value\030\002 \001(\005"
      "\022\024\n\014uint64_value\030\003 \001(\004\022\022\n\nbool_value\030\004 \001"
      "(\010\022\023\n\013float_value\030\005 \001(\002\022\024\n\014string_value\030"
      "\006 \001(\t\022\026\n\016matrix34_value\030\007 \003(\002\"L\n\004Type\022\t\n"
      "\005Int32\020\000\022\n\n\006Uint64\020\001\022\010\n\004Bool\020\002\022\t\n\005Float\020"
      "\003\022\n\n\006String\020\004\022\014\n\010Matrix34\020\005\"n\n\tOVRDevice"
      "\022\n\n\002id\030\001 \001(\005\022\024\n\014device_class\030\002 \001(\005\022\027\n\017co"
      "ntroller_role\030\003 \001(\005\022&\n\nproperties\030\004 \003(\0132"
      "\022.OVRDeviceProperty\"{\n\tOVRSample\022\014\n\004time"
      "\030\001 \001(\004\022\020\n\010position\030\002 \003(\002\022\020\n\010rotation\030\003 \003"
      "(\002\022\014\n\004axis\030\004 \003(\002\022\026\n\016button_pressed\030\005 \001(\004"
      "\022\026\n\016button_touched\030\006 \001(\004\"=\n\013OVRTimeline\022"
      "\021\n\tdevice_id\030\001 \001(\005\022\033\n\007samples\030\002 \003(\0132\n.OV"
      "RSampleb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 615);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ovr_device.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ovr_5fdevice_2eproto

const ::google::protobuf::EnumDescriptor* OVRDeviceProperty_Type_descriptor() {
  protobuf_ovr_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ovr_5fdevice_2eproto::file_level_enum_descriptors[0];
}
bool OVRDeviceProperty_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OVRDeviceProperty_Type OVRDeviceProperty::Int32;
const OVRDeviceProperty_Type OVRDeviceProperty::Uint64;
const OVRDeviceProperty_Type OVRDeviceProperty::Bool;
const OVRDeviceProperty_Type OVRDeviceProperty::Float;
const OVRDeviceProperty_Type OVRDeviceProperty::String;
const OVRDeviceProperty_Type OVRDeviceProperty::Matrix34;
const OVRDeviceProperty_Type OVRDeviceProperty::Type_MIN;
const OVRDeviceProperty_Type OVRDeviceProperty::Type_MAX;
const int OVRDeviceProperty::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OVRDeviceProperty::kIdentifierFieldNumber;
const int OVRDeviceProperty::kTypeFieldNumber;
const int OVRDeviceProperty::kInt32ValueFieldNumber;
const int OVRDeviceProperty::kUint64ValueFieldNumber;
const int OVRDeviceProperty::kBoolValueFieldNumber;
const int OVRDeviceProperty::kFloatValueFieldNumber;
const int OVRDeviceProperty::kStringValueFieldNumber;
const int OVRDeviceProperty::kMatrix34ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OVRDeviceProperty::OVRDeviceProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ovr_5fdevice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OVRDeviceProperty)
}
OVRDeviceProperty::OVRDeviceProperty(const OVRDeviceProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      matrix34_value_(from.matrix34_value_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.string_value().size() > 0) {
    string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&identifier_) -
    reinterpret_cast<char*>(&type_) + sizeof(identifier_));
  // @@protoc_insertion_point(copy_constructor:OVRDeviceProperty)
}

void OVRDeviceProperty::SharedCtor() {
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&identifier_) -
    reinterpret_cast<char*>(&type_) + sizeof(identifier_));
  _cached_size_ = 0;
}

OVRDeviceProperty::~OVRDeviceProperty() {
  // @@protoc_insertion_point(destructor:OVRDeviceProperty)
  SharedDtor();
}

void OVRDeviceProperty::SharedDtor() {
  string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OVRDeviceProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OVRDeviceProperty::descriptor() {
  protobuf_ovr_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ovr_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OVRDeviceProperty& OVRDeviceProperty::default_instance() {
  protobuf_ovr_5fdevice_2eproto::InitDefaults();
  return *internal_default_instance();
}

OVRDeviceProperty* OVRDeviceProperty::New(::google::protobuf::Arena* arena) const {
  OVRDeviceProperty* n = new OVRDeviceProperty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OVRDeviceProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:OVRDeviceProperty)
  matrix34_value_.Clear();
  string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&identifier_) -
    reinterpret_cast<char*>(&type_) + sizeof(identifier_));
}

bool OVRDeviceProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OVRDeviceProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OVRDeviceProperty.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::OVRDeviceProperty_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int32_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int32_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uint64_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "OVRDeviceProperty.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float matrix34_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_matrix34_value())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(61u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 58u, input, this->mutable_matrix34_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 identifier = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &identifier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OVRDeviceProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OVRDeviceProperty)
  return false;
#undef DO_
}

void OVRDeviceProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OVRDeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OVRDeviceProperty.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int32 int32_value = 2;
  if (this->int32_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->int32_value(), output);
  }

  // uint64 uint64_value = 3;
  if (this->uint64_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uint64_value(), output);
  }

  // bool bool_value = 4;
  if (this->bool_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bool_value(), output);
  }

  // float float_value = 5;
  if (this->float_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->float_value(), output);
  }

  // string string_value = 6;
  if (this->string_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OVRDeviceProperty.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->string_value(), output);
  }

  // repeated float matrix34_value = 7;
  if (this->matrix34_value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_matrix34_value_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->matrix34_value().data(), this->matrix34_value_size(), output);
  }

  // int32 identifier = 8;
  if (this->identifier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->identifier(), output);
  }

  // @@protoc_insertion_point(serialize_end:OVRDeviceProperty)
}

::google::protobuf::uint8* OVRDeviceProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OVRDeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .OVRDeviceProperty.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // int32 int32_value = 2;
  if (this->int32_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->int32_value(), target);
  }

  // uint64 uint64_value = 3;
  if (this->uint64_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uint64_value(), target);
  }

  // bool bool_value = 4;
  if (this->bool_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bool_value(), target);
  }

  // float float_value = 5;
  if (this->float_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->float_value(), target);
  }

  // string string_value = 6;
  if (this->string_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "OVRDeviceProperty.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->string_value(), target);
  }

  // repeated float matrix34_value = 7;
  if (this->matrix34_value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _matrix34_value_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->matrix34_value_, target);
  }

  // int32 identifier = 8;
  if (this->identifier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->identifier(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:OVRDeviceProperty)
  return target;
}

size_t OVRDeviceProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OVRDeviceProperty)
  size_t total_size = 0;

  // repeated float matrix34_value = 7;
  {
    unsigned int count = this->matrix34_value_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _matrix34_value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string string_value = 6;
  if (this->string_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_value());
  }

  // .OVRDeviceProperty.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 int32_value = 2;
  if (this->int32_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int32_value());
  }

  // uint64 uint64_value = 3;
  if (this->uint64_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uint64_value());
  }

  // bool bool_value = 4;
  if (this->bool_value() != 0) {
    total_size += 1 + 1;
  }

  // float float_value = 5;
  if (this->float_value() != 0) {
    total_size += 1 + 4;
  }

  // int32 identifier = 8;
  if (this->identifier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->identifier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OVRDeviceProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OVRDeviceProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const OVRDeviceProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OVRDeviceProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OVRDeviceProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OVRDeviceProperty)
    MergeFrom(*source);
  }
}

void OVRDeviceProperty::MergeFrom(const OVRDeviceProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OVRDeviceProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matrix34_value_.MergeFrom(from.matrix34_value_);
  if (from.string_value().size() > 0) {

    string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.int32_value() != 0) {
    set_int32_value(from.int32_value());
  }
  if (from.uint64_value() != 0) {
    set_uint64_value(from.uint64_value());
  }
  if (from.bool_value() != 0) {
    set_bool_value(from.bool_value());
  }
  if (from.float_value() != 0) {
    set_float_value(from.float_value());
  }
  if (from.identifier() != 0) {
    set_identifier(from.identifier());
  }
}

void OVRDeviceProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OVRDeviceProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OVRDeviceProperty::CopyFrom(const OVRDeviceProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OVRDeviceProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OVRDeviceProperty::IsInitialized() const {
  return true;
}

void OVRDeviceProperty::Swap(OVRDeviceProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OVRDeviceProperty::InternalSwap(OVRDeviceProperty* other) {
  matrix34_value_.InternalSwap(&other->matrix34_value_);
  string_value_.Swap(&other->string_value_);
  std::swap(type_, other->type_);
  std::swap(int32_value_, other->int32_value_);
  std::swap(uint64_value_, other->uint64_value_);
  std::swap(bool_value_, other->bool_value_);
  std::swap(float_value_, other->float_value_);
  std::swap(identifier_, other->identifier_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OVRDeviceProperty::GetMetadata() const {
  protobuf_ovr_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ovr_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OVRDeviceProperty

// int32 identifier = 8;
void OVRDeviceProperty::clear_identifier() {
  identifier_ = 0;
}
::google::protobuf::int32 OVRDeviceProperty::identifier() const {
  // @@protoc_insertion_point(field_get:OVRDeviceProperty.identifier)
  return identifier_;
}
void OVRDeviceProperty::set_identifier(::google::protobuf::int32 value) {
  
  identifier_ = value;
  // @@protoc_insertion_point(field_set:OVRDeviceProperty.identifier)
}

// .OVRDeviceProperty.Type type = 1;
void OVRDeviceProperty::clear_type() {
  type_ = 0;
}
::OVRDeviceProperty_Type OVRDeviceProperty::type() const {
  // @@protoc_insertion_point(field_get:OVRDeviceProperty.type)
  return static_cast< ::OVRDeviceProperty_Type >(type_);
}
void OVRDeviceProperty::set_type(::OVRDeviceProperty_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:OVRDeviceProperty.type)
}

// int32 int32_value = 2;
void OVRDeviceProperty::clear_int32_value() {
  int32_value_ = 0;
}
::google::protobuf::int32 OVRDeviceProperty::int32_value() const {
  // @@protoc_insertion_point(field_get:OVRDeviceProperty.int32_value)
  return int32_value_;
}
void OVRDeviceProperty::set_int32_value(::google::protobuf::int32 value) {
  
  int32_value_ = value;
  // @@protoc_insertion_point(field_set:OVRDeviceProperty.int32_value)
}

// uint64 uint64_value = 3;
void OVRDeviceProperty::clear_uint64_value() {
  uint64_value_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OVRDeviceProperty::uint64_value() const {
  // @@protoc_insertion_point(field_get:OVRDeviceProperty.uint64_value)
  return uint64_value_;
}
void OVRDeviceProperty::set_uint64_value(::google::protobuf::uint64 value) {
  
  uint64_value_ = value;
  // @@protoc_insertion_point(field_set:OVRDeviceProperty.uint64_value)
}

// bool bool_value = 4;
void OVRDeviceProperty::clear_bool_value() {
  bool_value_ = false;
}
bool OVRDeviceProperty::bool_value() const {
  // @@protoc_insertion_point(field_get:OVRDeviceProperty.bool_value)
  return bool_value_;
}
void OVRDeviceProperty::set_bool_value(bool value) {
  
  bool_value_ = value;
  // @@protoc_insertion_point(field_set:OVRDeviceProperty.bool_value)
}

// float float_value = 5;
void OVRDeviceProperty::clear_float_value() {
  float_value_ = 0;
}
float OVRDeviceProperty::float_value() const {
  // @@protoc_insertion_point(field_get:OVRDeviceProperty.float_value)
  return float_value_;
}
void OVRDeviceProperty::set_float_value(float value) {
  
  float_value_ = value;
  // @@protoc_insertion_point(field_set:OVRDeviceProperty.float_value)
}

// string string_value = 6;
void OVRDeviceProperty::clear_string_value() {
  string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OVRDeviceProperty::string_value() const {
  // @@protoc_insertion_point(field_get:OVRDeviceProperty.string_value)
  return string_value_.GetNoArena();
}
void OVRDeviceProperty::set_string_value(const ::std::string& value) {
  
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OVRDeviceProperty.string_value)
}
#if LANG_CXX11
void OVRDeviceProperty::set_string_value(::std::string&& value) {
  
  string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OVRDeviceProperty.string_value)
}
#endif
void OVRDeviceProperty::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OVRDeviceProperty.string_value)
}
void OVRDeviceProperty::set_string_value(const char* value, size_t size) {
  
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OVRDeviceProperty.string_value)
}
::std::string* OVRDeviceProperty::mutable_string_value() {
  
  // @@protoc_insertion_point(field_mutable:OVRDeviceProperty.string_value)
  return string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVRDeviceProperty::release_string_value() {
  // @@protoc_insertion_point(field_release:OVRDeviceProperty.string_value)
  
  return string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVRDeviceProperty::set_allocated_string_value(::std::string* string_value) {
  if (string_value != NULL) {
    
  } else {
    
  }
  string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  // @@protoc_insertion_point(field_set_allocated:OVRDeviceProperty.string_value)
}

// repeated float matrix34_value = 7;
int OVRDeviceProperty::matrix34_value_size() const {
  return matrix34_value_.size();
}
void OVRDeviceProperty::clear_matrix34_value() {
  matrix34_value_.Clear();
}
float OVRDeviceProperty::matrix34_value(int index) const {
  // @@protoc_insertion_point(field_get:OVRDeviceProperty.matrix34_value)
  return matrix34_value_.Get(index);
}
void OVRDeviceProperty::set_matrix34_value(int index, float value) {
  matrix34_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:OVRDeviceProperty.matrix34_value)
}
void OVRDeviceProperty::add_matrix34_value(float value) {
  matrix34_value_.Add(value);
  // @@protoc_insertion_point(field_add:OVRDeviceProperty.matrix34_value)
}
const ::google::protobuf::RepeatedField< float >&
OVRDeviceProperty::matrix34_value() const {
  // @@protoc_insertion_point(field_list:OVRDeviceProperty.matrix34_value)
  return matrix34_value_;
}
::google::protobuf::RepeatedField< float >*
OVRDeviceProperty::mutable_matrix34_value() {
  // @@protoc_insertion_point(field_mutable_list:OVRDeviceProperty.matrix34_value)
  return &matrix34_value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OVRDevice::kIdFieldNumber;
const int OVRDevice::kDeviceClassFieldNumber;
const int OVRDevice::kControllerRoleFieldNumber;
const int OVRDevice::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OVRDevice::OVRDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ovr_5fdevice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OVRDevice)
}
OVRDevice::OVRDevice(const OVRDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      properties_(from.properties_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&controller_role_) -
    reinterpret_cast<char*>(&id_) + sizeof(controller_role_));
  // @@protoc_insertion_point(copy_constructor:OVRDevice)
}

void OVRDevice::SharedCtor() {
  ::memset(&id_, 0, reinterpret_cast<char*>(&controller_role_) -
    reinterpret_cast<char*>(&id_) + sizeof(controller_role_));
  _cached_size_ = 0;
}

OVRDevice::~OVRDevice() {
  // @@protoc_insertion_point(destructor:OVRDevice)
  SharedDtor();
}

void OVRDevice::SharedDtor() {
}

void OVRDevice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OVRDevice::descriptor() {
  protobuf_ovr_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ovr_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OVRDevice& OVRDevice::default_instance() {
  protobuf_ovr_5fdevice_2eproto::InitDefaults();
  return *internal_default_instance();
}

OVRDevice* OVRDevice::New(::google::protobuf::Arena* arena) const {
  OVRDevice* n = new OVRDevice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OVRDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:OVRDevice)
  properties_.Clear();
  ::memset(&id_, 0, reinterpret_cast<char*>(&controller_role_) -
    reinterpret_cast<char*>(&id_) + sizeof(controller_role_));
}

bool OVRDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OVRDevice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 device_class = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_class_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 controller_role = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controller_role_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .OVRDeviceProperty properties = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OVRDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OVRDevice)
  return false;
#undef DO_
}

void OVRDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OVRDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 device_class = 2;
  if (this->device_class() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->device_class(), output);
  }

  // int32 controller_role = 3;
  if (this->controller_role() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->controller_role(), output);
  }

  // repeated .OVRDeviceProperty properties = 4;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->properties(i), output);
  }

  // @@protoc_insertion_point(serialize_end:OVRDevice)
}

::google::protobuf::uint8* OVRDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OVRDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 device_class = 2;
  if (this->device_class() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->device_class(), target);
  }

  // int32 controller_role = 3;
  if (this->controller_role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->controller_role(), target);
  }

  // repeated .OVRDeviceProperty properties = 4;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->properties(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:OVRDevice)
  return target;
}

size_t OVRDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OVRDevice)
  size_t total_size = 0;

  // repeated .OVRDeviceProperty properties = 4;
  {
    unsigned int count = this->properties_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties(i));
    }
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 device_class = 2;
  if (this->device_class() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device_class());
  }

  // int32 controller_role = 3;
  if (this->controller_role() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->controller_role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OVRDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OVRDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const OVRDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OVRDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OVRDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OVRDevice)
    MergeFrom(*source);
  }
}

void OVRDevice::MergeFrom(const OVRDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OVRDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.device_class() != 0) {
    set_device_class(from.device_class());
  }
  if (from.controller_role() != 0) {
    set_controller_role(from.controller_role());
  }
}

void OVRDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OVRDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OVRDevice::CopyFrom(const OVRDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OVRDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OVRDevice::IsInitialized() const {
  return true;
}

void OVRDevice::Swap(OVRDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OVRDevice::InternalSwap(OVRDevice* other) {
  properties_.InternalSwap(&other->properties_);
  std::swap(id_, other->id_);
  std::swap(device_class_, other->device_class_);
  std::swap(controller_role_, other->controller_role_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OVRDevice::GetMetadata() const {
  protobuf_ovr_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ovr_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OVRDevice

// int32 id = 1;
void OVRDevice::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 OVRDevice::id() const {
  // @@protoc_insertion_point(field_get:OVRDevice.id)
  return id_;
}
void OVRDevice::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:OVRDevice.id)
}

// int32 device_class = 2;
void OVRDevice::clear_device_class() {
  device_class_ = 0;
}
::google::protobuf::int32 OVRDevice::device_class() const {
  // @@protoc_insertion_point(field_get:OVRDevice.device_class)
  return device_class_;
}
void OVRDevice::set_device_class(::google::protobuf::int32 value) {
  
  device_class_ = value;
  // @@protoc_insertion_point(field_set:OVRDevice.device_class)
}

// int32 controller_role = 3;
void OVRDevice::clear_controller_role() {
  controller_role_ = 0;
}
::google::protobuf::int32 OVRDevice::controller_role() const {
  // @@protoc_insertion_point(field_get:OVRDevice.controller_role)
  return controller_role_;
}
void OVRDevice::set_controller_role(::google::protobuf::int32 value) {
  
  controller_role_ = value;
  // @@protoc_insertion_point(field_set:OVRDevice.controller_role)
}

// repeated .OVRDeviceProperty properties = 4;
int OVRDevice::properties_size() const {
  return properties_.size();
}
void OVRDevice::clear_properties() {
  properties_.Clear();
}
const ::OVRDeviceProperty& OVRDevice::properties(int index) const {
  // @@protoc_insertion_point(field_get:OVRDevice.properties)
  return properties_.Get(index);
}
::OVRDeviceProperty* OVRDevice::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:OVRDevice.properties)
  return properties_.Mutable(index);
}
::OVRDeviceProperty* OVRDevice::add_properties() {
  // @@protoc_insertion_point(field_add:OVRDevice.properties)
  return properties_.Add();
}
::google::protobuf::RepeatedPtrField< ::OVRDeviceProperty >*
OVRDevice::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:OVRDevice.properties)
  return &properties_;
}
const ::google::protobuf::RepeatedPtrField< ::OVRDeviceProperty >&
OVRDevice::properties() const {
  // @@protoc_insertion_point(field_list:OVRDevice.properties)
  return properties_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OVRSample::kTimeFieldNumber;
const int OVRSample::kPositionFieldNumber;
const int OVRSample::kRotationFieldNumber;
const int OVRSample::kAxisFieldNumber;
const int OVRSample::kButtonPressedFieldNumber;
const int OVRSample::kButtonTouchedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OVRSample::OVRSample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ovr_5fdevice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OVRSample)
}
OVRSample::OVRSample(const OVRSample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      position_(from.position_),
      rotation_(from.rotation_),
      axis_(from.axis_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    reinterpret_cast<char*>(&button_touched_) -
    reinterpret_cast<char*>(&time_) + sizeof(button_touched_));
  // @@protoc_insertion_point(copy_constructor:OVRSample)
}

void OVRSample::SharedCtor() {
  ::memset(&time_, 0, reinterpret_cast<char*>(&button_touched_) -
    reinterpret_cast<char*>(&time_) + sizeof(button_touched_));
  _cached_size_ = 0;
}

OVRSample::~OVRSample() {
  // @@protoc_insertion_point(destructor:OVRSample)
  SharedDtor();
}

void OVRSample::SharedDtor() {
}

void OVRSample::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OVRSample::descriptor() {
  protobuf_ovr_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ovr_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OVRSample& OVRSample::default_instance() {
  protobuf_ovr_5fdevice_2eproto::InitDefaults();
  return *internal_default_instance();
}

OVRSample* OVRSample::New(::google::protobuf::Arena* arena) const {
  OVRSample* n = new OVRSample;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OVRSample::Clear() {
// @@protoc_insertion_point(message_clear_start:OVRSample)
  position_.Clear();
  rotation_.Clear();
  axis_.Clear();
  ::memset(&time_, 0, reinterpret_cast<char*>(&button_touched_) -
    reinterpret_cast<char*>(&time_) + sizeof(button_touched_));
}

bool OVRSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OVRSample)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_position())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(21u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_position())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float rotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rotation())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(29u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_rotation())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float axis = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_axis())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(37u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_axis())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 button_pressed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &button_pressed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 button_touched = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &button_touched_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OVRSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OVRSample)
  return false;
#undef DO_
}

void OVRSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OVRSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->time(), output);
  }

  // repeated float position = 2;
  if (this->position_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_position_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->position().data(), this->position_size(), output);
  }

  // repeated float rotation = 3;
  if (this->rotation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rotation_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->rotation().data(), this->rotation_size(), output);
  }

  // repeated float axis = 4;
  if (this->axis_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_axis_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->axis().data(), this->axis_size(), output);
  }

  // uint64 button_pressed = 5;
  if (this->button_pressed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->button_pressed(), output);
  }

  // uint64 button_touched = 6;
  if (this->button_touched() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->button_touched(), output);
  }

  // @@protoc_insertion_point(serialize_end:OVRSample)
}

::google::protobuf::uint8* OVRSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OVRSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->time(), target);
  }

  // repeated float position = 2;
  if (this->position_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _position_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->position_, target);
  }

  // repeated float rotation = 3;
  if (this->rotation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rotation_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rotation_, target);
  }

  // repeated float axis = 4;
  if (this->axis_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _axis_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->axis_, target);
  }

  // uint64 button_pressed = 5;
  if (this->button_pressed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->button_pressed(), target);
  }

  // uint64 button_touched = 6;
  if (this->button_touched() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->button_touched(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:OVRSample)
  return target;
}

size_t OVRSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OVRSample)
  size_t total_size = 0;

  // repeated float position = 2;
  {
    unsigned int count = this->position_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _position_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float rotation = 3;
  {
    unsigned int count = this->rotation_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rotation_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float axis = 4;
  {
    unsigned int count = this->axis_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _axis_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  // uint64 button_pressed = 5;
  if (this->button_pressed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->button_pressed());
  }

  // uint64 button_touched = 6;
  if (this->button_touched() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->button_touched());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OVRSample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OVRSample)
  GOOGLE_DCHECK_NE(&from, this);
  const OVRSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OVRSample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OVRSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OVRSample)
    MergeFrom(*source);
  }
}

void OVRSample::MergeFrom(const OVRSample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OVRSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  position_.MergeFrom(from.position_);
  rotation_.MergeFrom(from.rotation_);
  axis_.MergeFrom(from.axis_);
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.button_pressed() != 0) {
    set_button_pressed(from.button_pressed());
  }
  if (from.button_touched() != 0) {
    set_button_touched(from.button_touched());
  }
}

void OVRSample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OVRSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OVRSample::CopyFrom(const OVRSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OVRSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OVRSample::IsInitialized() const {
  return true;
}

void OVRSample::Swap(OVRSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OVRSample::InternalSwap(OVRSample* other) {
  position_.InternalSwap(&other->position_);
  rotation_.InternalSwap(&other->rotation_);
  axis_.InternalSwap(&other->axis_);
  std::swap(time_, other->time_);
  std::swap(button_pressed_, other->button_pressed_);
  std::swap(button_touched_, other->button_touched_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OVRSample::GetMetadata() const {
  protobuf_ovr_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ovr_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OVRSample

// uint64 time = 1;
void OVRSample::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OVRSample::time() const {
  // @@protoc_insertion_point(field_get:OVRSample.time)
  return time_;
}
void OVRSample::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:OVRSample.time)
}

// repeated float position = 2;
int OVRSample::position_size() const {
  return position_.size();
}
void OVRSample::clear_position() {
  position_.Clear();
}
float OVRSample::position(int index) const {
  // @@protoc_insertion_point(field_get:OVRSample.position)
  return position_.Get(index);
}
void OVRSample::set_position(int index, float value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:OVRSample.position)
}
void OVRSample::add_position(float value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:OVRSample.position)
}
const ::google::protobuf::RepeatedField< float >&
OVRSample::position() const {
  // @@protoc_insertion_point(field_list:OVRSample.position)
  return position_;
}
::google::protobuf::RepeatedField< float >*
OVRSample::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:OVRSample.position)
  return &position_;
}

// repeated float rotation = 3;
int OVRSample::rotation_size() const {
  return rotation_.size();
}
void OVRSample::clear_rotation() {
  rotation_.Clear();
}
float OVRSample::rotation(int index) const {
  // @@protoc_insertion_point(field_get:OVRSample.rotation)
  return rotation_.Get(index);
}
void OVRSample::set_rotation(int index, float value) {
  rotation_.Set(index, value);
  // @@protoc_insertion_point(field_set:OVRSample.rotation)
}
void OVRSample::add_rotation(float value) {
  rotation_.Add(value);
  // @@protoc_insertion_point(field_add:OVRSample.rotation)
}
const ::google::protobuf::RepeatedField< float >&
OVRSample::rotation() const {
  // @@protoc_insertion_point(field_list:OVRSample.rotation)
  return rotation_;
}
::google::protobuf::RepeatedField< float >*
OVRSample::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable_list:OVRSample.rotation)
  return &rotation_;
}

// repeated float axis = 4;
int OVRSample::axis_size() const {
  return axis_.size();
}
void OVRSample::clear_axis() {
  axis_.Clear();
}
float OVRSample::axis(int index) const {
  // @@protoc_insertion_point(field_get:OVRSample.axis)
  return axis_.Get(index);
}
void OVRSample::set_axis(int index, float value) {
  axis_.Set(index, value);
  // @@protoc_insertion_point(field_set:OVRSample.axis)
}
void OVRSample::add_axis(float value) {
  axis_.Add(value);
  // @@protoc_insertion_point(field_add:OVRSample.axis)
}
const ::google::protobuf::RepeatedField< float >&
OVRSample::axis() const {
  // @@protoc_insertion_point(field_list:OVRSample.axis)
  return axis_;
}
::google::protobuf::RepeatedField< float >*
OVRSample::mutable_axis() {
  // @@protoc_insertion_point(field_mutable_list:OVRSample.axis)
  return &axis_;
}

// uint64 button_pressed = 5;
void OVRSample::clear_button_pressed() {
  button_pressed_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OVRSample::button_pressed() const {
  // @@protoc_insertion_point(field_get:OVRSample.button_pressed)
  return button_pressed_;
}
void OVRSample::set_button_pressed(::google::protobuf::uint64 value) {
  
  button_pressed_ = value;
  // @@protoc_insertion_point(field_set:OVRSample.button_pressed)
}

// uint64 button_touched = 6;
void OVRSample::clear_button_touched() {
  button_touched_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OVRSample::button_touched() const {
  // @@protoc_insertion_point(field_get:OVRSample.button_touched)
  return button_touched_;
}
void OVRSample::set_button_touched(::google::protobuf::uint64 value) {
  
  button_touched_ = value;
  // @@protoc_insertion_point(field_set:OVRSample.button_touched)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OVRTimeline::kDeviceIdFieldNumber;
const int OVRTimeline::kSamplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OVRTimeline::OVRTimeline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ovr_5fdevice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OVRTimeline)
}
OVRTimeline::OVRTimeline(const OVRTimeline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      samples_(from.samples_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_id_ = from.device_id_;
  // @@protoc_insertion_point(copy_constructor:OVRTimeline)
}

void OVRTimeline::SharedCtor() {
  device_id_ = 0;
  _cached_size_ = 0;
}

OVRTimeline::~OVRTimeline() {
  // @@protoc_insertion_point(destructor:OVRTimeline)
  SharedDtor();
}

void OVRTimeline::SharedDtor() {
}

void OVRTimeline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OVRTimeline::descriptor() {
  protobuf_ovr_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ovr_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OVRTimeline& OVRTimeline::default_instance() {
  protobuf_ovr_5fdevice_2eproto::InitDefaults();
  return *internal_default_instance();
}

OVRTimeline* OVRTimeline::New(::google::protobuf::Arena* arena) const {
  OVRTimeline* n = new OVRTimeline;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OVRTimeline::Clear() {
// @@protoc_insertion_point(message_clear_start:OVRTimeline)
  samples_.Clear();
  device_id_ = 0;
}

bool OVRTimeline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OVRTimeline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 device_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .OVRSample samples = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_samples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OVRTimeline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OVRTimeline)
  return false;
#undef DO_
}

void OVRTimeline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OVRTimeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 device_id = 1;
  if (this->device_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->device_id(), output);
  }

  // repeated .OVRSample samples = 2;
  for (unsigned int i = 0, n = this->samples_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->samples(i), output);
  }

  // @@protoc_insertion_point(serialize_end:OVRTimeline)
}

::google::protobuf::uint8* OVRTimeline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OVRTimeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 device_id = 1;
  if (this->device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->device_id(), target);
  }

  // repeated .OVRSample samples = 2;
  for (unsigned int i = 0, n = this->samples_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->samples(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:OVRTimeline)
  return target;
}

size_t OVRTimeline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OVRTimeline)
  size_t total_size = 0;

  // repeated .OVRSample samples = 2;
  {
    unsigned int count = this->samples_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->samples(i));
    }
  }

  // int32 device_id = 1;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OVRTimeline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OVRTimeline)
  GOOGLE_DCHECK_NE(&from, this);
  const OVRTimeline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OVRTimeline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OVRTimeline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OVRTimeline)
    MergeFrom(*source);
  }
}

void OVRTimeline::MergeFrom(const OVRTimeline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OVRTimeline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  samples_.MergeFrom(from.samples_);
  if (from.device_id() != 0) {
    set_device_id(from.device_id());
  }
}

void OVRTimeline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OVRTimeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OVRTimeline::CopyFrom(const OVRTimeline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OVRTimeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OVRTimeline::IsInitialized() const {
  return true;
}

void OVRTimeline::Swap(OVRTimeline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OVRTimeline::InternalSwap(OVRTimeline* other) {
  samples_.InternalSwap(&other->samples_);
  std::swap(device_id_, other->device_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OVRTimeline::GetMetadata() const {
  protobuf_ovr_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ovr_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OVRTimeline

// int32 device_id = 1;
void OVRTimeline::clear_device_id() {
  device_id_ = 0;
}
::google::protobuf::int32 OVRTimeline::device_id() const {
  // @@protoc_insertion_point(field_get:OVRTimeline.device_id)
  return device_id_;
}
void OVRTimeline::set_device_id(::google::protobuf::int32 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:OVRTimeline.device_id)
}

// repeated .OVRSample samples = 2;
int OVRTimeline::samples_size() const {
  return samples_.size();
}
void OVRTimeline::clear_samples() {
  samples_.Clear();
}
const ::OVRSample& OVRTimeline::samples(int index) const {
  // @@protoc_insertion_point(field_get:OVRTimeline.samples)
  return samples_.Get(index);
}
::OVRSample* OVRTimeline::mutable_samples(int index) {
  // @@protoc_insertion_point(field_mutable:OVRTimeline.samples)
  return samples_.Mutable(index);
}
::OVRSample* OVRTimeline::add_samples() {
  // @@protoc_insertion_point(field_add:OVRTimeline.samples)
  return samples_.Add();
}
::google::protobuf::RepeatedPtrField< ::OVRSample >*
OVRTimeline::mutable_samples() {
  // @@protoc_insertion_point(field_mutable_list:OVRTimeline.samples)
  return &samples_;
}
const ::google::protobuf::RepeatedPtrField< ::OVRSample >&
OVRTimeline::samples() const {
  // @@protoc_insertion_point(field_list:OVRTimeline.samples)
  return samples_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
